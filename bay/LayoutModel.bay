/*!
 *  Bayrell Runtime Library
 *
 *  (c) Copyright 2016-2021 "Ildar Bikmamatov" <support@bayrell.org>
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

namespace Runtime.Web.App;

use Runtime.BaseStruct;
use Runtime.Web.App.PageModel;
use Runtime.Web.App.Route;
use Runtime.Web.App.WidgetModel;


struct LayoutModel extends BaseStruct
{
	/* URL Info */
	bool is_https = false;
	int port = 80;
	string hostname = "";
	string uri = "";
	string full_uri = "";
	string route_prefix = "";
	string locale_uri = "";
	string f_inc = "";
	Route route = null;
	Dict<string> route_params = null;
	
	/* Base SEO Options */
	string locale = "en";
	string title = "";
	string description = "";
	string tz = "UTC";
	
	/* Layout info */
	string layout_name = "default";
	string layout_class = "";
	
	/* Current page */
	string page_class = "";
	
	/* Model by class name */
	Dict<PageModel> model = {};
	
	/* Extend components */
	Collection<string> extend_components = [];
	
	
	/**
	 * Get components
	 */
	Collection<string> getComponents()
	{
		Vector components = new Vector();
		
		/* Add widgets */
		PageModel page_model = this["model", this.page_class] |> default PageModel null;
		if (page_model)
		{
			Collection widget_keys = page_model.widgets.keys();
			for (int i=0; i<widget_keys.count(); i++)
			{
				string widget_key = widget_keys[i];
				WidgetModel widget_model = page_model.widgets[widget_key] |> default WidgetModel null;
				if (widget_model != null and widget_model.class_name != "" and rtl::class_exists(widget_model.class_name))
				{
					components.pushValue(widget_model.class_name);
				}
			}
		}
		
		/* Add extend components */
		components = components.concat(this.extend_components);
		
		/* Append layout and page */
		components = components.concat([ this.page_class, this.layout_class ])
		
		return components.toCollection();
	}
}